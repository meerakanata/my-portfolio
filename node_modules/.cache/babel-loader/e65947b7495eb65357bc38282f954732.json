{"ast":null,"code":"var _jsxFileName = \"/Users/meerashah2/Desktop/MEERA - UX:UI PORTFOLIO/mpa/my-mpa-folio/src/Pages/Components/CaseThumbnails.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\"; //need to include an if statement that checks the value of the URL ID and then\n//renders the logo styling conditionally as hover or not hovered.\n//This is to make sure that when the case study page load the chosen case study\n//page has it's logo in colour in the projects navigation.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CaseThumbnails() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let navigate = useNavigate();\n  linkStyle = _s(() => {\n    _s();\n\n    let {\n      project\n    } = useParams();\n\n    if (project === \"JasonClerkID\") {\n      return \"jclogo:hover\";\n    } else return \"jclogo\";\n  }, \"aQICPBiAYVjvi4Lok+xBEPoaOEE=\", false, function () {\n    return [useParams];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"caseStudies\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.linkStyle,\n      className: \"card\",\n      onClick: () => {\n        navigate(\"/work/JasonClerkID\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(CaseThumbnails, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CaseThumbnails;\nexport default CaseThumbnails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CaseThumbnails\");","map":{"version":3,"sources":["/Users/meerashah2/Desktop/MEERA - UX:UI PORTFOLIO/mpa/my-mpa-folio/src/Pages/Components/CaseThumbnails.js"],"names":["React","Link","useParams","useNavigate","CaseThumbnails","navigate","linkStyle","project"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;AAEA;AACA;AACA;;;;AAGA,SAASC,cAAT,GAA0B;AAAA;;AAAA;;AACxB,MAAIC,QAAQ,GAAGF,WAAW,EAA1B;AAEAG,EAAAA,SAAS,MAAG,MAAK;AAAA;;AACf,QAAI;AAACC,MAAAA;AAAD,QAAYL,SAAS,EAAzB;;AACA,QAAGK,OAAO,KAAK,cAAf,EAA8B;AAC5B,aAAO,cAAP;AACD,KAFD,MAGK,OAAO,QAAP;AAEN,GAPQ;AAAA,YACSL,SADT;AAAA,IAAT;AASE,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BAEE;AAAK,MAAA,EAAE,EAAE,KAAKI,SAAd;AAAyB,MAAA,SAAS,EAAC,MAAnC;AAA0C,MAAA,OAAO,EAAE,MAAI;AAACD,QAAAA,QAAQ,CAAC,oBAAD,CAAR;AAA+B;AAAvF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;IArBMD,c;UACQD,W;;;KADRC,c;AAuBP,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {useParams} from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\n//need to include an if statement that checks the value of the URL ID and then\n\n//renders the logo styling conditionally as hover or not hovered.\n//This is to make sure that when the case study page load the chosen case study\n//page has it's logo in colour in the projects navigation.\n\n\nfunction CaseThumbnails() {\n  let navigate = useNavigate();\n\n  linkStyle = () =>{\n    let {project} = useParams();\n    if(project === \"JasonClerkID\"){\n      return \"jclogo:hover\";\n    }\n    else return \"jclogo\";\n\n  }\n  \n    return (\n      <div className=\"caseStudies\">\n        {/* <div id=\"jclogo\" className=\"card\" onClick={()=>{navigate(\"/work/JasonClerkID\")}}></div> */}\n        <div id={this.linkStyle} className=\"card\" onClick={()=>{navigate(\"/work/JasonClerkID\")}}></div>\n        {/* <div id=\"sflogo\" className=\"card\" onClick={()=>{navigate(\"/work/SugarFlower\")}}></div>\n        <div id=\"canada150logos\" className=\"card\" onClick={()=>{navigate(\"/work/Canada150\")}}></div>\n        <div id=\"McDslogo\" className=\"card\" onClick={()=>{navigate(\"/work/McDonaldsGCTA\")}}></div> */}\n    </div>\n    );\n  }\n  \n  export default CaseThumbnails;\n"]},"metadata":{},"sourceType":"module"}